Call/Return Style Basic Concepts(Parallelism and Concurrency)
//Las imágenes tomadas para este laboratorio están en src/main/resources
Part 1:
1. 
- La razón del consumo de la CPU son las esperas activas que hay en los threads. El sleep dentro del productor 
disminuye el procesamiento, y es por eso que cuando se ejecuta el consumidor aumenta el consumo, pues este todo el 
tiempo se encuentra intentando extraer lo que ha hecho el productor, pero como el procesamiento es diferente entre productor
y consumidor, se queda mucho tiempo esperando (tiempo desperdiciado) a poder extraer algo.
- La clase responsable del consumo de CPU es la clase "Consumer".

PART II:
2.For that case, for N players, what should be that value?
- El valor de la vida debería ser DEFAULT_IMMORTAL_HEALTH*N.
3.Is the invariant satisfied?
- El invariante no es satisfecho, porque cada vez que se da click en pause & check, la vida total de los highlanders varía y debería permanecer constante.
5.Verify again the functionality clicking many times. Is the invariant satisfied?
- El invariante sigue sin estar satisfecho, después de haber usado la sincronización al momento de hacer click en pause & check y resume.
10.
- Remover a los inmortales cuando se mueren si es una condición de carrera, pues la lista que los contiene se encuentra en cada una de las instancias de los inmortales, y cuando se remueve uno de ellos, las otras listas lo siguen conteniendo, por lo que no todos son notificados del cambio.